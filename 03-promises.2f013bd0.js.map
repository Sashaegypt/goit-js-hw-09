{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,CAACC,EAAQC,KACnC,MAAMC,EAAgBC,KAAKC,SAAW,GACvCC,YAAW,KACNH,EACFF,EAAO,C,SAACH,E,MAASC,IAEjBG,EAAO,C,SAACJ,E,MAASC,GAAO,GAEzBA,EAAM,G,CAmBX,SAASQ,GAAUT,SAACA,EAAQC,MAACA,IAC3BJ,EAAAa,OAAOC,QAAQ,uBAAqBX,QAAiBC,M,CAGvD,SAASW,GAAQZ,SAAEA,EAAQC,MAACA,IAC1BJ,EAAAa,OAAOC,QAAQ,sBAAoBX,QAAeC,M,CAlBrCY,SAASC,cAAc,SAC/BC,iBAAiB,UACxB,SAAkBC,GAChBA,EAAEC,iBACF,IAAIhB,EAAQiB,OAAOF,EAAEG,cAAclB,MAAMmB,OACzC,MAAMC,EAASH,OAAOF,EAAEG,cAAcE,OAAOD,OACvCE,EAAOJ,OAAOF,EAAEG,cAAcG,KAAKF,OACzC,IAAI,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAC/BxB,EAAcwB,EAAEtB,GAAOuB,KAAKf,GAAWgB,MAAMb,GAC7CX,GAASqB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolt, reject) =>{\n    const shouldResolve = Math.random() > 0.3;\n   setTimeout(() => {\n    if (shouldResolve) {\n      resolt({position,delay});\n    } else {\n      reject({position,delay});\n    }\n   },delay);\n    \n  });\n  return promise;\n}\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit',onSubmit);\nfunction onSubmit(e){\n  e.preventDefault();\n  let delay = Number(e.currentTarget.delay.value);\n  const amount = Number(e.currentTarget.amount.value);\n  const step = Number(e.currentTarget.step.value);\n  for(let i = 1; i <= amount; i += 1){\n    createPromise(i,delay).then(onSuccess).catch(onError);\n    delay += step;\n  }\n}\n\nfunction onSuccess({position,delay}){\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position,delay}){\n  Notify.success(`❌ Rejected promise ${position} in ${delay}ms`);\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolt","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onSuccess","Notify","success","$47d4ff9957288465$var$onError","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","value","amount","step","i","then","catch"],"version":3,"file":"03-promises.2f013bd0.js.map"}